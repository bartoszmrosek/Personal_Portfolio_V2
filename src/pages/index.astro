---
import Experience from "../components/Experience/Experience.astro";
import Home from "../components/Home/Home.astro";
import NavigationMobile from "../components/Navigation/Navigation.jsx";
import Projects from "../components/Projects/Projects.jsx";
import "../global.css";
---

<style>
  .homeWrapper {
    position: relative;
    display: flex;
    width: 100%;
    height: 100%;
  }
  .projectsWrapper {
    min-height: 100%;
    padding-top: 8rem;
    padding-bottom: 3rem;
    position: relative;

    display: flex;
    flex-direction: column;
    gap: 6rem;
  }
  .projectsTopGroup {
    position: absolute;
    top: 5.5rem;
  }

  .projectsBottomGroup {
    position: absolute;
    bottom: 0;
  }
  @media only screen and (max-width: 767px) {
    .projectsWrapper {
      padding-top: 6rem;
    }
    .projectsTopGroup {
      top: 3rem;
    }
  }
</style>

<script>
  const observer = new IntersectionObserver(
    (entries) => {
      const desktopNavbar = document.getElementById("desktopNavLinks");

      let currentListOfNavLinks: HTMLAnchorElement[] = [];
      if (desktopNavbar) {
        desktopNavbar.childNodes.forEach((el) =>
          currentListOfNavLinks.push(el as HTMLAnchorElement)
        );
      }

      entries.forEach((entry) => {
        if (entry.isIntersecting && currentListOfNavLinks.length > 0) {
          currentListOfNavLinks.forEach((navlink) => {
            navlink.classList.remove("neonBorder");
            if (navlink.href.includes(`#${entry.target.id}`)) {
              navlink.classList.add("neonBorder");
            }
          });
        }

        if (entry.isIntersecting && entry.target.id === "Experience") {
          entry.target.classList.add("movingInAnimation");
        }
      });
    },
    { rootMargin: "0px", threshold: 0.4 }
  );

  const allSections = [
    document.getElementById("Home"),
    document.getElementById("Experience"),
    document.getElementById("Projects"),
  ];

  window.addEventListener("load", () => {
    allSections.forEach((el) => observer.observe(el!));
  });
</script>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="author" content="Bartosz Mrosek" />
    <title>Bartosz Mrosek</title>
  </head>
  <body>
    <NavigationMobile client:only="react" />
    <main>
      <div class="homeWrapper">
        <Home />
      </div>
      <Experience />
      <section id="Projects" class="projectsWrapper">
        <div class="projectsTopGroup htmlDecorators">
          <pre>
  &lt;section id="Projects"&gt;
          </pre>
        </div>
        <Projects client:idle client:only="react" />
        <div class="projectsBottomGroup htmlDecorators">
          <pre>
  &lt;/section&gt;
          </pre>
        </div>
      </section>
    </main>
  </body>
</html>
